version: '{branch}.{build}'
skip_tags: true
clone_folder: c:\projects\git
environment:
  token:
    secure: /VxMVHbl3XzhHfFGCCu81O4JPgI42lbTT+n/opdJ7LW8XMsjgW3ztAPLI3u2TBro
  RUST_VERSION: rust-1.3.0
  SDL_VERSION: 2.0.3
  matrix:
  - TARGET1: x86_64
    TARGET2: x64
  - TARGET1: i686
    TARGET2: x86
install:
- ps: >-
    New-Item c:\projects\downloads -type directory

    New-Item c:\projects\cargo -type directory

    New-Item c:\projects\sdl -type directory

    New-Item c:\projects\git\artifacts -type directory


    cd c:\Python27\Scripts\

    ./easy_install pip

    ./pip install --disable-pip-version-check --pre github3.py

    cd c:\projects\downloads

    Start-FileDownload "https://static.rust-lang.org/dist/${env:RUST_VERSION}-${env:TARGET1}-pc-windows-gnu.msi"

    Start-FileDownload "https://static.rust-lang.org/cargo-dist/cargo-nightly-${env:TARGET1}-pc-windows-gnu.tar.gz"

    Start-FileDownload "https://www.libsdl.org/release/SDL2-${env:SDL_VERSION}-win32-${env:TARGET2}.zip"

    Start-FileDownload "https://www.libsdl.org/release/SDL2-devel-${env:SDL_VERSION}-mingw.tar.gz"

    If (${env:TARGET2} -eq "x86") {
    Start-FileDownload "http://sourceforge.net/projects/mingw/files/MinGW/Base/gcc/Version4/gcc-4.8.1-4/gcc-core-4.8.1-4-mingw32-dll.tar.lzma"
    }


    Start-Process -FilePath msiexec -ArgumentList /i, ${env:RUST_VERSION}-${env:TARGET1}-pc-windows-gnu.msi, INSTALLDIR="c:\projects\rust", /quiet -Wait

    7z x cargo-nightly-${env:TARGET1}-pc-windows-gnu.tar.gz

    7z x cargo-nightly-${env:TARGET1}-pc-windows-gnu.tar

    7z x SDL2-${env:SDL_VERSION}-win32-${env:TARGET2}.zip

    7z x SDL2-devel-${env:SDL_VERSION}-mingw.tar.gz

    7z x SDL2-devel-${env:SDL_VERSION}-mingw.tar

    If (${env:TARGET2} -eq "x86") {
    7z x gcc-core-4.8.1-4-mingw32-dll.tar.lzma
    }

    If (${env:TARGET2} -eq "x86") {
    7z x gcc-core-4.8.1-4-mingw32-dll.tar
    }


    Copy-Item cargo-nightly-${env:TARGET1}-pc-windows-gnu\cargo\* c:\projects\cargo\ -recurse

    Copy-Item SDL2-${env:SDL_VERSION}\${env:TARGET1}-w64-mingw32\lib\libSDL2.dll.a c:\projects\rust\bin\rustlib\${env:TARGET1}-pc-windows-gnu\lib\

    Copy-Item SDL2.dll c:\projects\sdl\

    Copy-Item SDL2.dll c:\projects\git\artifacts\

    If (${env:TARGET2} -eq "x86") {
    Copy-Item bin\libgcc_s_dw2-1.dll c:\projects\git\artifacts\
    }

    Copy-Item c:\projects\git\media c:\projects\git\artifacts\ -recurse


    $env:Path += ";c:\projects\rust\bin"

    $env:Path += ";c:\projects\cargo\bin"

    $env:Path += ";c:\projects\sdl"

    cd c:\projects\git


    rustc -V

    cargo -V
build_script:
- ps: >-
    cargo build --release -v

    Copy-Item target\release\rust-software-render.exe artifacts\
test_script:
- ps: cargo test -v
before_deploy:
- ps: python -c"from github3 import login;import os;map(lambda x:x.delete(),[it for it in login(token=os.environ['token']).repository('ReanGD','rust-software-render').releases() if it.tag_name==os.environ['APPVEYOR_REPO_BRANCH']+'-'+os.environ['TARGET2']+'-win'])"
artifacts:
- path: artifacts
  name: artifacts
deploy:
- provider: GitHub
  tag: $(APPVEYOR_REPO_BRANCH)-$(TARGET2)-win
  release: $(APPVEYOR_REPO_BRANCH)-$(TARGET2)-win
  description: $(APPVEYOR_REPO_BRANCH)-$(TARGET2) for windows
  auth_token:
    secure: /VxMVHbl3XzhHfFGCCu81O4JPgI42lbTT+n/opdJ7LW8XMsjgW3ztAPLI3u2TBro
  artifact: artifacts.zip
notifications:
- provider: Email
  to:
  - reangd@yandex.ru
  on_build_success: false
  on_build_failure: true
  on_build_status_changed: false